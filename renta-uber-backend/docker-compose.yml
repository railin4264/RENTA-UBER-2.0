version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: renta_uber_postgres
    environment:
      POSTGRES_DB: renta_uber_db
      POSTGRES_USER: renta_uber_user
      POSTGRES_PASSWORD: renta_uber_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - renta_uber_network
    restart: unless-stopped

  # Base de datos Redis para caché y sesiones
  redis:
    image: redis:7-alpine
    container_name: renta_uber_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - renta_uber_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: renta_uber_backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://renta_uber_user:renta_uber_password@postgres:5432/renta_uber_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - renta_uber_network
    restart: unless-stopped

  # Nginx como reverse proxy
  nginx:
    image: nginx:alpine
    container_name: renta_uber_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - renta_uber_network
    restart: unless-stopped

  # Certbot para SSL automático
  certbot:
    image: certbot/certbot
    container_name: renta_uber_certbot
    volumes:
      - ./ssl:/etc/letsencrypt
      - ./webroot:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN_NAME}
    networks:
      - renta_uber_network

volumes:
  postgres_data:
  redis_data:

networks:
  renta_uber_network:
    driver: bridge